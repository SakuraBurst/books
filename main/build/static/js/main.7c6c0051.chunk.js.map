{"version":3,"sources":["entity/mutation.types.ts","helpers/hooks.ts","components/Lol.tsx","store/actions/auth.ts","context/AuthProvider.tsx","store/actions/common.ts","components/FormBuilder.tsx","components/pages/Authoriztion.tsx","store/actions/books.ts","components/JustModal.tsx","components/AddBookModal.tsx","components/pages/Books.tsx","router/ProtectedRoute.tsx","components/pages/Registration.tsx","components/DeleteBookModal.tsx","components/EditBookModal.tsx","components/pages/Book.tsx","router/Router.tsx","components/GreatLoader.tsx","components/Alert.tsx","App.tsx","reportWebVitals.ts","store/reducers/profile.ts","store/reducers/books.ts","store/reducers/common.ts","store/reducers/index.ts","helpers/axios.ts","store/sideEffects/auth.ts","store/sideEffects/books.ts","store/sideEffects/common.ts","store/sideEffects/index.ts","index.tsx","store/configureStore.ts"],"names":["MutationTypes","useAppDispatch","useDispatch","useAppSelector","useSelector","Lol","token","a","auth","Button","variant","AuthContext","createContext","undefined","useAuth","useContext","AuthProvider","children","dispatch","useRef","current","user","login","history","console","log","loginObj","type","LOGIN","loginAction","logOut","LOGOUT","registration","newUser","REGISTRATION","registrationAction","useEffect","localStorage","getItem","Provider","value","setAppLoading","flag","SET_LOADING","setAlert","alert","newAlert","text","id","Date","getTime","store","removeAlertTimeout","SET_ALERT","alertId","timeout","REMOVE_ALERT_TIMEOUT","removeAlert","REMOVE_ALERT","FormBuilder","formikInitialValue","fields","buttonName","onSubmit","schema","formik","useFormik","initialValues","validationSchema","values","className","Form","noValidate","validated","isValid","handleSubmit","map","Row","Group","Label","title","Control","required","valueName","name","onBlur","handleBlur","placeholder","onChange","handleChange","touched","errors","isInvalid","controlId","Authorization","props","Yup","email","password","Alert","onClick","push","fetchBooks","GET_BOOKS","setBooksIntoState","data","SET_BOOKS","setBookIntoState","SET_BOOK","JustModal","show","onHide","submitButton","submitButtonText","showFooter","Modal","size","aria-labelledby","centered","Header","closeButton","Title","Body","Footer","AddBookModal","author","year","book","ADD_BOOK","ListOfBooks","useState","currentBooksList","setCurrentBooksList","modalShow","setModalShow","books","dispatchBooks","length","nextPage","where","currentBooks","i","Card","Subtitle","Text","format","ButtonToolbar","ButtonGroup","buttons","pagination","Math","ceil","ProtectedRoute","path","to","Registration","first_name","last_name","DeleteBookModal","deleteBook","DELETE_BOOK","deleteBookAction","EditBookModal","initialValue","moment","bookForm","EDIT_BOOK","Book","memo","randomPictures","changeDeleteBook","editBook","changeEditBook","pictureIndex","changePictureIndex","currentBook","match","params","changeIndex","round","random","GET_BOOK","fetchBook","Img","src","Router","route","routeName","routeComponent","withRouter","private","GreatLoader","Spinner","animation","loading","common","alerts","aria-live","aria-atomic","style","position","minHeight","top","right","Toast","backgroundColor","color","minWidth","onClose","App","appLoading","display","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialProfileStore","userReducer","state","action","LOGIN_SUCCESS","initialBooksStore","booksReducer","initialCommonStore","newAlerts","commonReducer","initialState","AxiosInstanse","axios","create","baseURL","AuthSaga","RegistrationSaga","AuthWatcher","post","put","call","response","takeEvery","GetBooksSaga","AddBookSaga","GetBookSaga","EditBookSaga","DeleteBookSaga","BooksWatcher","getBooksApi","get","getBookApi","setBookApi","editBookApi","delete","deleteBookApi","TimeoutSaga","CommonWatcher","delay","rootSaga","all","saga","createSagaMiddleware","enchancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","createStore","combineReducers","run","configureStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7c6c0051.chunk.js","sourcesContent":["export enum MutationTypes {\n  SET_LOADING = \"SET_LOADING\",\n  SET_ALERT = \"SET_ALERT\",\n  REMOVE_ALERT = \"REMOVE_ALERT\",\n  REMOVE_ALERT_TIMEOUT = \"REMOVE_ALERT_TIMEOUT\",\n  LOGIN = \"LOGIN\",\n  LOGOUT = \"LOGOUT\",\n  REGISTRATION = \"REGISTRATION\",\n  LOGIN_SUCCESS = \"LOGIN_SUCCESS\",\n  SET_TOKEN = \"SET_TOKEN\",\n  GET_BOOKS = \"GET_BOOKS\",\n  SET_BOOKS = \"SET_BOOKS\",\n  GET_BOOK = \"GET_BOOK\",\n  SET_BOOK = \"SET_BOOK\",\n  ADD_BOOK = \"ADD_BOOK\",\n  EDIT_BOOK = \"ADD_BOOK\",\n  DELETE_BOOK = \"DELETE_BOOK\",\n}\n","import { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\nimport { AppDispatch, RootState } from \"../index\";\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { Button } from \"react-bootstrap\";\nimport { useAppSelector } from \"../helpers/hooks\";\nimport { FC } from \"react\";\nimport { RouteComponentProps, StaticContext } from \"react-router\";\n\nexport const Lol: FC<RouteComponentProps<any, StaticContext, unknown>> = () => {\n  const token = useAppSelector((a) => a.auth.token);\n  return (\n    <div>\n      <Button variant=\"success\">{token}</Button>\n    </div>\n  );\n};\n","import { MutationTypes } from \"../../entity/mutation.types\";\nimport { UserResponseType } from \"../../entity/user.types\";\nimport { History } from \"history\";\nimport { AuthorizationForm, RegistrationForm } from \"../../entity/form.types\";\nexport const loginAction = (\n  loginObj: AuthorizationForm,\n  history: History<unknown>\n) => {\n  return <const>{\n    type: MutationTypes.LOGIN,\n    loginObj,\n    history,\n  };\n};\nexport const registrationAction = (newUser: RegistrationForm) => {\n  return <const>{\n    type: MutationTypes.REGISTRATION,\n    newUser,\n  };\n};\n\nexport const getUserByToken = (token: string) => {\n  return <const>{\n    type: MutationTypes.REGISTRATION,\n    token,\n  };\n};\nexport const loginActionSuccess = (data: UserResponseType) =>\n  <const>{\n    type: MutationTypes.LOGIN_SUCCESS,\n    data,\n  };\nexport const setToken = (data: string) =>\n  <const>{\n    type: MutationTypes.SET_TOKEN,\n    token: data,\n  };\nexport const logoutAction = () =>\n  <const>{\n    type: MutationTypes.LOGOUT,\n    token: \"\",\n    user: undefined,\n  };\n","import { createContext, ReactNode, useContext, useEffect, useRef } from \"react\";\nimport { History } from \"history\";\nimport { User } from \"../entity/user.types\";\nimport { useAppDispatch, useAppSelector } from \"../helpers/hooks\";\nimport {\n  loginAction,\n  logoutAction,\n  registrationAction,\n} from \"../store/actions/auth\";\nimport { AuthorizationForm, RegistrationForm } from \"../entity/form.types\";\ntype auth =\n  | {\n      user: User | undefined;\n      login(login: AuthorizationForm, history: History<unknown>): void;\n      logOut(): void;\n      registration(newUser: RegistrationForm): void;\n    }\n  | undefined;\n\nconst AuthContext = createContext<auth>(undefined);\n\nexport const useAuth = () => {\n  return useContext(AuthContext);\n};\n\nexport function AuthProvider({ children }: { children: ReactNode }) {\n  // ну да шобы линтер не ругался\n  const dispatch = useRef(useAppDispatch());\n  dispatch.current = useAppDispatch();\n  const user = useAppSelector((a) => a.auth.user);\n  const auth = {\n    user,\n    login(login: AuthorizationForm, history: History<unknown>) {\n      console.log(\"d2\");\n      dispatch.current(loginAction(login, history));\n    },\n    logOut() {\n      dispatch.current(logoutAction());\n    },\n    registration(newUser: RegistrationForm) {\n      dispatch.current(registrationAction(newUser));\n    },\n  };\n  useEffect(() => {\n    if (localStorage.getItem(\"token\")) {\n      console.log(localStorage);\n    } else {\n    }\n  }, []);\n  return <AuthContext.Provider value={auth}>{children}</AuthContext.Provider>;\n}\n","import { MutationTypes } from \"../../entity/mutation.types\";\nimport { Alert, AlertMessage } from \"../../entity/common.types\";\nimport { store } from \"../../index\";\n\nexport const setAppLoading = (flag: boolean) =>\n  <const>{\n    type: MutationTypes.SET_LOADING,\n    flag,\n  };\n\nexport const setAlert = (alert: AlertMessage) => {\n  const newAlert: Alert = {\n    type: alert.type,\n    text: alert.text,\n    id: new Date().getTime(),\n  };\n  store.dispatch(removeAlertTimeout(newAlert.id, 5000));\n  return <const>{\n    type: MutationTypes.SET_ALERT,\n    newAlert,\n  };\n};\n\nexport const removeAlertTimeout = (alertId: number, timeout: number) =>\n  <const>{\n    type: MutationTypes.REMOVE_ALERT_TIMEOUT,\n    alertId,\n    timeout,\n  };\n\nexport const removeAlert = (alertId: number) =>\n  <const>{\n    type: MutationTypes.REMOVE_ALERT,\n    alertId,\n  };\n","import { useFormik } from \"formik\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { FC } from \"react\";\nimport {\n  AuthorizationForm,\n  NewBookForm,\n  RegistrationForm,\n} from \"../entity/form.types\";\nimport { History } from \"history\";\n\nexport interface Field<T> {\n  type: \"text\" | \"password\" | \"date\";\n  valueName: keyof T;\n  title: string;\n  placeholder: string;\n  controlId: string;\n}\n\nexport interface FormBuilderI<T> {\n  formikInitialValue: T;\n  fields: Array<Field<T>>;\n  buttonName: string;\n  onSubmit(value: T, history?: History<unknown>): void;\n  history?: History<unknown>;\n  schema: any;\n}\n\n// ТИП ТОЛЬКО ДЛЯ ФОРМ БИЛДЕРА\n// это плохо я знаю, но я пока хз как сделать так, чтобы все типы удовлетворяли одному инетрфейсу\n// поэтому просто сделал его локальным\ntype _FormUnion = RegistrationForm & AuthorizationForm & NewBookForm;\n\nexport const FormBuilder: FC<FormBuilderI<_FormUnion>> = ({\n  formikInitialValue,\n  fields,\n  buttonName,\n  onSubmit,\n  history,\n  schema,\n}) => {\n  const formik = useFormik<_FormUnion>({\n    initialValues: formikInitialValue,\n    validationSchema: schema,\n    onSubmit: (values) => {\n      onSubmit(values, history);\n    },\n  });\n  return (\n    <div className=\"auth-form justify-content-center d-flex\">\n      <Form\n        noValidate\n        validated={formik.isValid}\n        onSubmit={formik.handleSubmit}\n      >\n        {fields.map((a) => (\n          <Form.Row key={a.controlId}>\n            <Form.Group>\n              <Form.Label>{a.title}</Form.Label>\n              <Form.Control\n                required\n                id={a.valueName}\n                name={a.valueName}\n                type={a.type}\n                onBlur={formik.handleBlur}\n                placeholder={a.placeholder}\n                value={formik.values[a.valueName]}\n                onChange={formik.handleChange}\n                isValid={\n                  formik.touched[a.valueName] && !formik.errors[a.valueName]\n                }\n                isInvalid={\n                  formik.touched[a.valueName] && !!formik.errors[a.valueName]\n                }\n              />\n            </Form.Group>\n          </Form.Row>\n        ))}\n        <Button type=\"submit\">{buttonName}</Button>\n      </Form>\n    </div>\n  );\n};\n","import { Alert } from \"react-bootstrap\";\nimport { FC } from \"react\";\nimport { useAppDispatch } from \"../../helpers/hooks\";\nimport { RouteComponentProps, StaticContext } from \"react-router\";\nimport { useAuth } from \"../../context/AuthProvider\";\nimport { AuthorizationForm } from \"../../entity/form.types\";\nimport * as Yup from \"yup\";\nimport { setAlert } from \"../../store/actions/common\";\nimport { Field, FormBuilder } from \"../FormBuilder\";\n\nexport const Authorization: FC<\n  RouteComponentProps<any, StaticContext, unknown>\n> = (props: RouteComponentProps) => {\n  const dispatch = useAppDispatch();\n  const auth = useAuth();\n\n  const initialValues: AuthorizationForm = {\n    email: \"\",\n    password: \"\",\n  };\n  const schema = Yup.object({\n    email: Yup.string().email(\"Invalid email address\").required(\"Required\"),\n    password: Yup.string().required(\"Required\"),\n  });\n\n  const submit = (values: AuthorizationForm) => {\n    if (auth) {\n      auth.login(values, props.history);\n    } else {\n      dispatch(setAlert({ type: \"error\", text: \"возникли какие-то проблемы\" }));\n    }\n  };\n  const fields: Array<Field<AuthorizationForm>> = [\n    {\n      type: \"text\",\n      valueName: \"email\",\n      title: \"E-mail\",\n      placeholder: \"\",\n      controlId: \"3\",\n    },\n    {\n      type: \"password\",\n      valueName: \"password\",\n      title: \"Пароль\",\n      placeholder: \"\",\n      controlId: \"4\",\n    },\n  ];\n  function registration() {\n    props.history.push(\"/registration\");\n  }\n  return (\n    <div className=\"auth-form justify-content-center d-flex\">\n      <FormBuilder\n        formikInitialValue={initialValues}\n        fields={fields}\n        buttonName={\"Войти\"}\n        onSubmit={submit}\n        history={props.history}\n        schema={schema}\n      />\n      <Alert\n        onClick={registration}\n        className=\"cursor-pointer\"\n        variant=\"primary\"\n      >\n        Нет аккаунта? Зарегестрироваться\n      </Alert>\n    </div>\n  );\n};\n","import { MutationTypes } from \"../../entity/mutation.types\";\nimport { Book, BooksResponseType } from \"../../entity/books.types\";\nimport { NewBookForm } from \"../../entity/form.types\";\nimport { History } from \"history\";\n\nexport const fetchBooks = () =>\n  <const>{\n    type: MutationTypes.GET_BOOKS,\n  };\n\nexport const AddBook = (book: NewBookForm) =>\n  <const>{\n    type: MutationTypes.ADD_BOOK,\n    book,\n  };\n\nexport const EditBook = (bookForm: NewBookForm, id: string) =>\n  <const>{\n    type: MutationTypes.EDIT_BOOK,\n    bookForm,\n    id,\n  };\n\nexport const setBooksIntoState = (data: BooksResponseType) =>\n  <const>{\n    type: MutationTypes.SET_BOOKS,\n    data,\n  };\n\nexport const fetchBook = (id: string) =>\n  <const>{\n    type: MutationTypes.GET_BOOK,\n    id,\n  };\n\nexport const setBookIntoState = (data: Book) =>\n  <const>{\n    type: MutationTypes.SET_BOOK,\n    data,\n  };\n\nexport const deleteBookAction = (id: string, history: History<unknown>) =>\n  <const>{\n    type: MutationTypes.DELETE_BOOK,\n    id,\n    history,\n  };\n","import { Button, Modal } from \"react-bootstrap\";\nimport { FC, ReactNode } from \"react\";\n\nexport interface ModalI {\n  children: ReactNode;\n  show: boolean;\n  submitButton: boolean;\n  onSubmit(...any: any): void;\n  submitButtonText: string;\n  onHide(): void;\n  showFooter?: boolean;\n  text: string;\n}\n\nexport const JustModal: FC<ModalI> = ({\n  children,\n  show,\n  onHide,\n  submitButton,\n  submitButtonText,\n  onSubmit,\n  text,\n  showFooter = true,\n}) => {\n  return (\n    <Modal\n      show={show}\n      onHide={onHide}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">{text}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>{children}</Modal.Body>\n      {showFooter ? (\n        <Modal.Footer>\n          {submitButton ? (\n            <Button onClick={onSubmit}>{submitButtonText}</Button>\n          ) : (\n            <></>\n          )}\n          <Button onClick={onHide}>закрыть</Button>\n        </Modal.Footer>\n      ) : (\n        <></>\n      )}\n    </Modal>\n  );\n};\n","import { FC } from \"react\";\nimport { JustModal } from \"./JustModal\";\nimport { useAppDispatch } from \"../helpers/hooks\";\nimport { NewBookForm } from \"../entity/form.types\";\nimport * as Yup from \"yup\";\nimport { Field, FormBuilder } from \"./FormBuilder\";\nimport { AddBook } from \"../store/actions/books\";\nimport { History } from \"history\";\n\ninterface AddBookModalI {\n  show: boolean;\n  onHide(): void;\n  history: History<unknown>;\n}\n\nexport const AddBookModal: FC<AddBookModalI> = ({ show, onHide, history }) => {\n  const dispatch = useAppDispatch();\n\n  const submit = (values: NewBookForm) => {\n    dispatch(AddBook(values));\n    onHide();\n  };\n\n  const initialValue: NewBookForm = {\n    title: \"\",\n    author: \"\",\n    year: \"\",\n  };\n\n  const schema = Yup.object({\n    title: Yup.string().required(\"Required\"),\n    author: Yup.string().required(\"Required\"),\n    year: Yup.date().required(\"Required\"),\n  });\n\n  const fields: Array<Field<NewBookForm>> = [\n    {\n      type: \"text\",\n      valueName: \"title\",\n      title: \"Название\",\n      placeholder: \"\",\n      controlId: \"1\",\n    },\n    {\n      type: \"text\",\n      valueName: \"author\",\n      title: \"Автор\",\n      placeholder: \"\",\n      controlId: \"2\",\n    },\n    {\n      type: \"date\",\n      valueName: \"year\",\n      title: \"Год\",\n      placeholder: \"\",\n      controlId: \"3\",\n    },\n  ];\n  return (\n    <JustModal\n      show={show}\n      onHide={() => onHide()}\n      onSubmit={() => {}}\n      submitButton={false}\n      submitButtonText={\"\"}\n      text={\"Добавь книгу\"}\n      showFooter={false}\n    >\n      <FormBuilder\n        formikInitialValue={initialValue}\n        fields={fields}\n        buttonName={\"новая книга\"}\n        onSubmit={submit}\n        schema={schema}\n        history={history}\n      />\n    </JustModal>\n  );\n};\n","import { useAppDispatch, useAppSelector } from \"../../helpers/hooks\";\nimport { FC, ReactElement, useEffect, useRef, useState } from \"react\";\nimport { fetchBooks } from \"../../store/actions/books\";\nimport { Button, ButtonGroup, ButtonToolbar, Card } from \"react-bootstrap\";\nimport { Book } from \"../../entity/books.types\";\nimport Moment from \"react-moment\";\nimport { RouteComponentProps, StaticContext } from \"react-router\";\nimport { AddBookModal } from \"../AddBookModal\";\n\nexport const ListOfBooks: FC<\n  RouteComponentProps<any, StaticContext, unknown>\n> = (props: RouteComponentProps) => {\n  // может когда-нибудь мне будет не лень сделать пагинацию с выбором числа итемов\n  // а может даже серверную\n  const itemsPerList = 5;\n  const [currentBooksList, setCurrentBooksList] = useState<Array<Book>>([]);\n  const [modalShow, setModalShow] = useState(false);\n  const books = useAppSelector((a) => a.books.books);\n  const dispatch = useAppDispatch();\n  // шобы линтер не ругался\n  const dispatchBooks = useRef(() => {});\n  dispatchBooks.current = () => {\n    dispatch(fetchBooks());\n  };\n  useEffect(() => {\n    dispatchBooks.current();\n  }, []);\n  useEffect(() => {\n    if (books.length > 0) {\n      nextPage.current(itemsPerList)();\n    }\n  }, [books]);\n  function getBooksLength(): number {\n    return books.length;\n  }\n  // шобы линтер не ругался\n  const nextPage = useRef((where: number) => () => {\n    console.log(where);\n  });\n  nextPage.current = (where: number) => {\n    return () => {\n      const currentBooks: Array<Book> = [];\n      for (let i = where - itemsPerList; i < where; i++) {\n        if (books[i]) {\n          currentBooks.push(books[i]);\n        }\n      }\n      setCurrentBooksList(currentBooks);\n    };\n  };\n  function buttons(): Array<ReactElement> {\n    const buttons: Array<ReactElement> = [];\n    const pagination = Math.ceil(getBooksLength() / itemsPerList);\n    for (let i = 1; i <= pagination; i++) {\n      buttons.push(\n        <Button\n          key={`${new Date()}_${i}`}\n          onClick={nextPage.current(itemsPerList * i)}\n        >\n          {i}\n        </Button>\n      );\n    }\n    return buttons;\n  }\n  return (\n    <div>\n      {currentBooksList.map((a) => (\n        <Card\n          onClick={() => props.history.push(`/books/${a.id}`)}\n          key={a.id}\n          className=\"book-card cursor-pointer my-2\"\n        >\n          <Card.Body>\n            <Card.Title>{a.title}</Card.Title>\n            <Card.Subtitle className=\"mb-2 text-muted\">\n              {a.author}\n            </Card.Subtitle>\n            <Card.Text>\n              <Moment format=\"DD.MM.YYYY\">{a.year}</Moment>\n            </Card.Text>\n          </Card.Body>\n        </Card>\n      ))}\n      <ButtonToolbar>\n        <ButtonGroup>{buttons()}</ButtonGroup>\n      </ButtonToolbar>\n      <Button\n        onClick={() => setModalShow(true)}\n        className=\"mt-5\"\n        variant=\"success\"\n      >\n        Добавить книгу\n      </Button>\n      <AddBookModal\n        show={modalShow}\n        onHide={() => setModalShow(false)}\n        history={props.history}\n      />\n    </div>\n  );\n};\n","import { useAuth } from \"../context/AuthProvider\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport { ReactNode, useEffect } from \"react\";\nimport { useAppDispatch } from \"../helpers/hooks\";\nimport { setAlert } from \"../store/actions/common\";\n\nexport default function ProtectedRoute({\n  children,\n  path,\n}: {\n  children: ReactNode;\n  path: string;\n}) {\n  const dispatch = useAppDispatch();\n  const auth = useAuth();\n  useEffect(() => {\n    if (!auth || (auth && !auth.user)) {\n      console.log(auth);\n      dispatch(setAlert({ type: \"error\", text: \"Вы должны быть залогинены\" }));\n    }\n  });\n  return auth && auth.user ? (\n    <Route path={path}>{children}</Route>\n  ) : (\n    <Redirect to={\"/\"} />\n  );\n}\n","import { FC } from \"react\";\nimport { RouteComponentProps, StaticContext } from \"react-router\";\nimport { useAuth } from \"../../context/AuthProvider\";\nimport * as Yup from \"yup\";\nimport { Field, FormBuilder } from \"../FormBuilder\";\nimport { RegistrationForm } from \"../../entity/form.types\";\nimport { useAppDispatch } from \"../../helpers/hooks\";\nimport { setAlert } from \"../../store/actions/common\";\n\nexport const Registration: FC<\n  RouteComponentProps<any, StaticContext, unknown>\n> = (props: RouteComponentProps) => {\n  const auth = useAuth();\n  const dispatch = useAppDispatch();\n\n  const submit = (values: RegistrationForm) => {\n    console.log(values);\n    if (auth) {\n      auth.registration(values);\n    } else {\n      dispatch(setAlert({ type: \"error\", text: \"возникли какие-то проблемы\" }));\n    }\n  };\n\n  const initialValue: RegistrationForm = {\n    first_name: \"\",\n    last_name: \"\",\n    email: \"\",\n    password: \"\",\n  };\n\n  const schema = Yup.object({\n    first_name: Yup.string().required(\"Required\"),\n    last_name: Yup.string().required(\"Required\"),\n    email: Yup.string().email(\"Invalid email address\").required(\"Required\"),\n    password: Yup.string().required(\"Required\"),\n  });\n\n  const fields: Array<Field<RegistrationForm>> = [\n    {\n      type: \"text\",\n      valueName: \"first_name\",\n      title: \"Имя\",\n      placeholder: \"\",\n      controlId: \"1\",\n    },\n    {\n      type: \"text\",\n      valueName: \"last_name\",\n      title: \"Фамилия\",\n      placeholder: \"\",\n      controlId: \"2\",\n    },\n    {\n      type: \"text\",\n      valueName: \"email\",\n      title: \"E-mail\",\n      placeholder: \"\",\n      controlId: \"3\",\n    },\n    {\n      type: \"password\",\n      valueName: \"password\",\n      title: \"Пароль\",\n      placeholder: \"\",\n      controlId: \"4\",\n    },\n  ];\n\n  return (\n    <div className=\"auth-form justify-content-center d-flex\">\n      <FormBuilder\n        formikInitialValue={initialValue}\n        fields={fields}\n        buttonName={\"зарегаться\"}\n        onSubmit={submit}\n        history={props.history}\n        schema={schema}\n      />\n    </div>\n  );\n};\n","import { FC } from \"react\";\nimport { JustModal } from \"./JustModal\";\nimport { useAppDispatch } from \"../helpers/hooks\";\nimport { History } from \"history\";\nimport { deleteBookAction } from \"../store/actions/books\";\n\ninterface DeleteBookModalI {\n  id: string;\n  onHide(): void;\n  show: boolean;\n  history: History<unknown>;\n}\n\nexport const DeleteBookModal: FC<DeleteBookModalI> = ({\n  id,\n  onHide,\n  show,\n  history,\n}) => {\n  const dispatch = useAppDispatch();\n  function deleteBook() {\n    dispatch(deleteBookAction(id, history));\n  }\n  return (\n    <JustModal\n      show={show}\n      submitButton={true}\n      onSubmit={() => deleteBook()}\n      submitButtonText={\"Удалить\"}\n      onHide={() => onHide()}\n      text={\"Удаление книги\"}\n    >\n      <div>Вы действительно хотите удалить это</div>\n    </JustModal>\n  );\n};\n","import { FC } from \"react\";\nimport { JustModal } from \"./JustModal\";\nimport { useAppDispatch } from \"../helpers/hooks\";\nimport { NewBookForm } from \"../entity/form.types\";\nimport * as Yup from \"yup\";\nimport { Field, FormBuilder } from \"./FormBuilder\";\nimport { EditBook } from \"../store/actions/books\";\nimport { Book } from \"../entity/books.types\";\nimport moment from \"moment\";\n\ninterface AddBookModalI {\n  show: boolean;\n  onHide(): void;\n  book: Book;\n}\n\nexport const EditBookModal: FC<AddBookModalI> = ({ show, onHide, book }) => {\n  const dispatch = useAppDispatch();\n\n  const submit = (values: NewBookForm) => {\n    dispatch(EditBook(values, `${book.id}`));\n    onHide();\n  };\n\n  const initialValue: NewBookForm = {\n    title: book.title,\n    author: book.author,\n    year: moment(book.year).format(\"YYYY-MM-DD\"),\n  };\n\n  const schema = Yup.object({\n    title: Yup.string().required(\"Required\"),\n    author: Yup.string().required(\"Required\"),\n    year: Yup.date().required(\"Required\"),\n  });\n\n  const fields: Array<Field<NewBookForm>> = [\n    {\n      type: \"text\",\n      valueName: \"title\",\n      title: \"Название\",\n      placeholder: \"\",\n      controlId: \"1\",\n    },\n    {\n      type: \"text\",\n      valueName: \"author\",\n      title: \"Автор\",\n      placeholder: \"\",\n      controlId: \"2\",\n    },\n    {\n      type: \"date\",\n      valueName: \"year\",\n      title: \"Год\",\n      placeholder: \"\",\n      controlId: \"3\",\n    },\n  ];\n  return (\n    <JustModal\n      show={show}\n      onHide={() => onHide()}\n      onSubmit={() => {}}\n      submitButton={false}\n      submitButtonText={\"\"}\n      text={\"Измени книгу\"}\n      showFooter={false}\n    >\n      <FormBuilder\n        formikInitialValue={initialValue}\n        fields={fields}\n        buttonName={\"изменить\"}\n        onSubmit={submit}\n        schema={schema}\n      />\n    </JustModal>\n  );\n};\n","import { FC, memo, useEffect, useRef, useState } from \"react\";\nimport { RouteComponentProps, StaticContext } from \"react-router\";\nimport { useAppDispatch, useAppSelector } from \"../../helpers/hooks\";\nimport { fetchBook } from \"../../store/actions/books\";\nimport { Button, Card } from \"react-bootstrap\";\nimport Moment from \"react-moment\";\nimport { DeleteBookModal } from \"../DeleteBookModal\";\nimport { EditBookModal } from \"../EditBookModal\";\n\ninterface ViewBookParams {\n  id: string;\n}\n\nexport const Book: FC<\n  RouteComponentProps<ViewBookParams, StaticContext, unknown>\n> = memo((props: RouteComponentProps<ViewBookParams>) => {\n  const randomPictures: Array<string> = [\n    \"https://tlgrm.eu/_/stickers/b12/d5f/b12d5fb5-fbd0-3a2d-99fc-2642b586f219/2.jpg\",\n    \"https://static.wikia.nocookie.net/36689b26-ddcb-4ae6-a8c0-33b165fb6bcd\",\n    \"https://coub-anubis-a.akamaized.net/coub_storage/coub/simple/cw_timeline_pic/1209ea8d93d/b040e8b2b7aeb701e436e/1472075717_1397934971_image.jpg\",\n    \"https://coub-anubis-a.akamaized.net/coub_storage/coub/simple/cw_timeline_pic/707e18cc5da/8719cc8272f4a5b57aa64/1472097606_image.jpg\",\n    \"https://coub-anubis-a.akamaized.net/coub_storage/coub/simple/cw_timeline_pic/9c601aca149/f9efb55a108f9c805cf97/1417725120_image.jpg\",\n    \"https://i.ytimg.com/vi/hCpnNCqjULw/maxresdefault.jpg\",\n    \"https://coub-anubis-a.akamaized.net/coub_storage/coub/simple/cw_timeline_pic/90dc2512709/05953e2add74dbac18317/1415193181_image.jpg\",\n    \"http://i.mycdn.me/i?r=AEHujHvw2RjEbemUCNEorZbxYpb_p_9AcN2FmGik64KrkRZtvDpGZlB7IRDnkDh2-EF7Zi9s0CiBOSDmbngC-I-k&fn=external_8\",\n    \"https://user92966.clients-cdnnow.ru/upload/setka-editor/a1c/a1cd53320de0951efc82d79db29afc44.jpg.webp\",\n    \"https://user92966.clients-cdnnow.ru/upload/setka-editor/0fe/0fe5f8ef5cc10ec303873a01d39ec01d.jpg.webp\",\n    \"https://sun9-69.userapi.com/impg/ae9mYIT5fRNtgCKP9m5d8wz6ZgqVkDt5JV1u2A/2jRtGN37Ht8.jpg?size=1920x1080&quality=96&sign=211aaf2a866dde1148f548273cbbe14b&type=album\",\n    \"https://sun9-53.userapi.com/impg/6d_zXlOn97SGWJdbrh9zb5ktYlyOUPQIVbmGTA/OM3iO6poYyQ.jpg?size=1925x863&quality=96&sign=28d45dd729e6e8ab6de0977379f2c039&type=album\",\n    \"https://sun9-19.userapi.com/impg/jmdNejMU9wxKV13PfjAhXjWIS5mLs6cXJ1YRlA/K-XxkGAuzbo.jpg?size=1920x1080&quality=96&sign=fd224e2ad334871c1ad6afb999fb9ab6&type=album\",\n    \"https://sun9-20.userapi.com/impg/SmBVN_ZAYSjpU6xM5VV1gYFRN-dFzBOk0jUTiQ/IH80pVkkFgc.jpg?size=1920x1080&quality=96&sign=4ec042afb016c1e7e493eda5a1c303f3&type=album\",\n  ];\n  const [deleteBook, changeDeleteBook] = useState(false);\n  const [editBook, changeEditBook] = useState(false);\n  const [pictureIndex, changePictureIndex] = useState(0);\n  const book = useAppSelector((a) => a.books.currentBook);\n  const id = props.match.params.id;\n  const changeIndex = useRef(() => {});\n  changeIndex.current = () =>\n    changePictureIndex(Math.round(Math.random() * randomPictures.length - 1));\n\n  const dispatch = useAppDispatch();\n  useEffect(() => {\n    changeIndex.current();\n    dispatch(fetchBook(id));\n  }, [dispatch, id]);\n  return book ? (\n    <div>\n      <div className=\"d-flex mt-5 justify-content-end\">\n        <Button onClick={() => changeDeleteBook(true)} variant=\"danger\">\n          Удалить книгу\n        </Button>\n      </div>\n      <DeleteBookModal\n        id={id}\n        onHide={() => changeDeleteBook(false)}\n        show={deleteBook}\n        history={props.history}\n      />\n      <Card className=\"book-card my-2\">\n        <Card.Img src={randomPictures[pictureIndex]} />\n        <Card.Body>\n          <Card.Title>{book.title}</Card.Title>\n          <Card.Subtitle className=\"mb-2 text-muted\">\n            {book.author}\n          </Card.Subtitle>\n          <Card.Text>\n            <Moment format=\"DD.MM.YYYY\">{book.year}</Moment>\n          </Card.Text>\n          <Button onClick={() => changeEditBook(true)} variant=\"primary\">\n            Изменить книгу\n          </Button>\n          <EditBookModal\n            show={editBook}\n            onHide={() => changeEditBook(false)}\n            book={book}\n          />\n        </Card.Body>\n      </Card>\n    </div>\n  ) : (\n    <div>ъаъа</div>\n  );\n});\n","import { Route, Switch, withRouter } from \"react-router-dom\";\nimport { Lol } from \"../components/Lol\";\nimport { RouteI } from \"./router.types\";\nimport { Authorization } from \"../components/pages/Authoriztion\";\nimport { ListOfBooks } from \"../components/pages/Books\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport { Registration } from \"../components/pages/Registration\";\nimport { Book } from \"../components/pages/Book\";\n\nexport default function Router() {\n  const route: Array<RouteI> = [\n    {\n      routeName: \"/registration\",\n      routeComponent: withRouter(Registration),\n      private: false,\n    },\n    {\n      routeName: \"/about\",\n      routeComponent: withRouter(Lol),\n      private: true,\n    },\n    {\n      routeName: \"/books/:id\",\n      routeComponent: withRouter(Book),\n      private: true,\n    },\n    {\n      routeName: \"/books\",\n      routeComponent: withRouter(ListOfBooks),\n      private: true,\n    },\n    {\n      routeName: \"/\",\n      routeComponent: withRouter(Authorization),\n      private: false,\n    },\n  ];\n  return (\n    <Switch>\n      {route.map((a: RouteI) =>\n        a.private ? (\n          <ProtectedRoute key={a.routeName} path={a.routeName}>\n            {a.routeComponent}\n          </ProtectedRoute>\n        ) : (\n          <Route key={a.routeName} path={a.routeName}>\n            {a.routeComponent}\n          </Route>\n        )\n      )}\n    </Switch>\n  );\n}\n","import React from \"react\";\nimport { Spinner } from \"react-bootstrap\";\n\nexport default function GreatLoader() {\n  return (\n    <>\n      <Spinner animation=\"border\" variant=\"primary\" />\n      <Spinner animation=\"border\" variant=\"secondary\" />\n      <Spinner animation=\"border\" variant=\"success\" />\n      <Spinner animation=\"border\" variant=\"danger\" />\n      <Spinner animation=\"border\" variant=\"warning\" />\n      <Spinner animation=\"border\" variant=\"info\" />\n      <Spinner animation=\"border\" variant=\"light\" />\n      <Spinner animation=\"border\" variant=\"dark\" />\n      <Spinner animation=\"grow\" variant=\"primary\" />\n      <Spinner animation=\"grow\" variant=\"secondary\" />\n      <Spinner animation=\"grow\" variant=\"success\" />\n      <Spinner animation=\"grow\" variant=\"danger\" />\n      <Spinner animation=\"grow\" variant=\"warning\" />\n      <Spinner animation=\"grow\" variant=\"info\" />\n      <Spinner animation=\"grow\" variant=\"light\" />\n      <Spinner animation=\"grow\" variant=\"dark\" />\n    </>\n  );\n}\n","import { Toast } from \"react-bootstrap\";\nimport { useAppDispatch, useAppSelector } from \"../helpers/hooks\";\nimport { removeAlert } from \"../store/actions/common\";\n\nexport default function Alert() {\n  const dispatch = useAppDispatch();\n  const loading = useAppSelector((a) => a.common.alerts);\n  function removeAlertById(id: number) {\n    return () => {\n      dispatch(removeAlert(id));\n    };\n  }\n  return (\n    <div\n      aria-live=\"polite\"\n      aria-atomic=\"true\"\n      style={{\n        position: \"absolute\",\n        minHeight: \"200px\",\n        top: 0,\n        right: 0,\n      }}\n    >\n      {loading.map((a) => (\n        <Toast\n          key={a.id}\n          style={{\n            backgroundColor: a.type === \"success\" ? \"green\" : \"red\",\n            color: \"white\",\n            minWidth: 200,\n            position: \"absolute\",\n            top: 0,\n            right: 0,\n          }}\n          onClose={removeAlertById(a.id)}\n        >\n          <Toast.Header>\n            <strong className=\"mr-auto\">\n              {a.type === \"success\" ? \"Заебись\" : \"Ошибка\"}\n            </strong>\n            <small>just now</small>\n          </Toast.Header>\n          <Toast.Body>{a.text}</Toast.Body>\n        </Toast>\n      ))}\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport Router from \"./router/Router\";\nimport GreatLoader from \"./components/GreatLoader\";\nimport { useAppSelector } from \"./helpers/hooks\";\nimport Alert from \"./components/Alert\";\n\nfunction App() {\n  const loading = useAppSelector((a) => a.common.appLoading);\n  return (\n    <div className=\"App\">\n      <div style={!loading ? { display: \"none\" } : {}}>\n        <GreatLoader />\n      </div>\n      <div className=\"app_container\" style={loading ? { display: \"none\" } : {}}>\n        <Router />\n        <Alert />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { User } from \"../../entity/user.types\";\nimport { MutationTypes } from \"../../entity/mutation.types\";\nimport { CoolType } from \"../actions\";\n\nexport interface AuthReducer {\n  token: string;\n  user: User | undefined;\n}\n\nexport let initialProfileStore: AuthReducer = {\n  token: \"1111111111\",\n  user: undefined,\n};\n\nexport default function userReducer(\n  state = initialProfileStore,\n  action: CoolType\n): AuthReducer {\n  switch (action.type) {\n    case MutationTypes.LOGIN_SUCCESS:\n      console.log(action.data);\n      return {\n        ...state,\n        user: action.data.user,\n      };\n\n    case MutationTypes.LOGOUT:\n      return {\n        ...state,\n        token: \"\",\n        user: undefined,\n      };\n    default:\n      return state;\n  }\n}\n","import { Book, BooksResponseType } from \"../../entity/books.types\";\nimport { MutationTypes } from \"../../entity/mutation.types\";\nimport { CoolType } from \"../actions\";\n\nexport interface BookReducer {\n  books: BooksResponseType;\n  currentBook: Book | null;\n}\n\nexport let initialBooksStore: BookReducer = {\n  books: [],\n  currentBook: null,\n};\n\nexport default function booksReducer(\n  state = initialBooksStore,\n  action: CoolType\n): BookReducer {\n  switch (action.type) {\n    case MutationTypes.SET_BOOKS:\n      return {\n        ...state,\n        books: action.data,\n      };\n    case MutationTypes.SET_BOOK:\n      return {\n        ...state,\n        currentBook: action.data,\n      };\n    default:\n      return state;\n  }\n}\n","import { CoolType } from \"../actions\";\nimport { MutationTypes } from \"../../entity/mutation.types\";\nimport { Alert } from \"../../entity/common.types\";\n\nexport interface CommonReducer {\n  alerts: Array<Alert>;\n  appLoading: boolean;\n}\n\nexport const initialCommonStore: CommonReducer = {\n  alerts: [],\n  appLoading: false,\n};\n\nfunction removeAlert(state: CommonReducer, id: number): Array<Alert> {\n  const newAlerts: Array<Alert> = [];\n  for (let i = 0; i < state.alerts.length; i++) {\n    if (state.alerts[i].id !== id) {\n      newAlerts.push(state.alerts[i]);\n    }\n  }\n\n  return newAlerts;\n}\n\nexport default function commonReducer(\n  state = initialCommonStore,\n  action: CoolType\n): CommonReducer {\n  switch (action.type) {\n    case MutationTypes.SET_LOADING:\n      return {\n        ...state,\n        appLoading: action.flag,\n      };\n    case MutationTypes.SET_ALERT:\n      return {\n        ...state,\n        alerts: [action.newAlert, ...state.alerts],\n      };\n    case MutationTypes.REMOVE_ALERT:\n      return {\n        ...state,\n        alerts: removeAlert(state, action.alertId),\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers, Reducer } from \"redux\";\nimport userReducer, { AuthReducer, initialProfileStore } from \"./profile\";\nimport booksReducer, { BookReducer, initialBooksStore } from \"./books\";\nimport commonReducer, { CommonReducer, initialCommonStore } from \"./common\";\n\nexport interface AppStore {\n  common: CommonReducer;\n  auth: AuthReducer;\n  books: BookReducer;\n}\n\nexport const initialState: AppStore = {\n  common: initialCommonStore,\n  auth: initialProfileStore,\n  books: initialBooksStore,\n};\n\nexport default function createReducers(): Reducer<AppStore> {\n  return combineReducers<AppStore>({\n    common: commonReducer,\n    auth: userReducer,\n    books: booksReducer,\n  });\n}\n","import axios from \"axios\";\n\nexport const AxiosInstanse = axios.create({\n  baseURL: \"http://192.168.0.144:3584\",\n  timeout: 1000,\n});\n","import { UserResponseType } from \"../../entity/user.types\";\nimport { call, takeEvery, put } from \"redux-saga/effects\";\nimport { AxiosInstanse } from \"../../helpers/axios\";\nimport { setAlert, setAppLoading } from \"../actions/common\";\nimport {\n  loginAction,\n  loginActionSuccess,\n  registrationAction,\n} from \"../actions/auth\";\nimport { MutationTypes } from \"../../entity/mutation.types\";\nimport { AxiosResponse } from \"axios\";\nimport { AuthorizationForm, RegistrationForm } from \"../../entity/form.types\";\nconst login = (data: AuthorizationForm) => () =>\n  AxiosInstanse.post(\"/api/login\", data);\n\nconst registration = (data: RegistrationForm) => () =>\n  AxiosInstanse.post(\"/api/registration\", data);\n\nexport function* AuthSaga({\n  loginObj,\n  history,\n}: ReturnType<typeof loginAction>) {\n  yield put(setAppLoading(true));\n  console.log(\"dfdf\");\n  try {\n    const response: AxiosResponse<UserResponseType> = yield call(\n      login(loginObj)\n    );\n    console.log(response);\n    yield put(loginActionSuccess(response.data));\n    history.push(\"/books\");\n    yield put(setAppLoading(false));\n  } catch (e) {\n    console.log(e);\n    yield put(setAppLoading(false));\n    yield put(\n      setAlert({\n        type: \"error\",\n        text: \"штото пошло не так, проверьте правильность вводимых данных\",\n      })\n    );\n  }\n}\n\nexport function* RegistrationSaga({\n  newUser,\n}: ReturnType<typeof registrationAction>) {\n  yield put(setAppLoading(true));\n  console.log(\"dfdfddddddd\");\n  try {\n    const response: AxiosResponse<any> = yield call(registration(newUser));\n    console.log(response);\n    // history.push(\"/books\");\n    yield put(\n      setAlert({\n        type: \"success\",\n        text: \"ты зарегался, заебись, теперь ты можешь с этими данными зайти\",\n      })\n    );\n    yield put(setAppLoading(false));\n  } catch (e) {\n    console.log(e);\n    yield put(setAppLoading(false));\n    yield put(\n      setAlert({\n        type: \"error\",\n        text: \"штото пошло не так, проверьте правильность вводимых данных\",\n      })\n    );\n  }\n}\nexport function* AuthWatcher() {\n  yield takeEvery(MutationTypes.REGISTRATION, RegistrationSaga);\n  yield takeEvery(MutationTypes.LOGIN, AuthSaga);\n}\n","import { AxiosInstanse } from \"../../helpers/axios\";\nimport { call, takeEvery, put } from \"redux-saga/effects\";\nimport { Book, BooksResponseType } from \"../../entity/books.types\";\nimport { MutationTypes } from \"../../entity/mutation.types\";\nimport {\n  AddBook,\n  deleteBookAction,\n  EditBook,\n  fetchBook,\n  fetchBooks,\n  setBookIntoState,\n  setBooksIntoState,\n} from \"../actions/books\";\nimport { AxiosResponse } from \"axios\";\nimport { setAlert, setAppLoading } from \"../actions/common\";\nimport { NewBookForm } from \"../../entity/form.types\";\n\nconst getBooksApi = () => AxiosInstanse.get(\"/api/books\");\n\nconst getBookApi = (id: string) => () => AxiosInstanse.get(`/api/books/${id}`);\n\nconst setBookApi = (book: NewBookForm) => () =>\n  AxiosInstanse.post(\"/api/books\", book);\n\nconst editBookApi = (book: NewBookForm, id: string) => () =>\n  AxiosInstanse.delete(`/api/books/${id}`);\n\nconst deleteBookApi = (id: string) => () =>\n  AxiosInstanse.delete(`/api/books/${id}`);\n\nfunction* GetBooksSaga() {\n  yield put(setAppLoading(true));\n  try {\n    const books: AxiosResponse<BooksResponseType> = yield call(getBooksApi);\n    console.log(books);\n    yield put(setBooksIntoState(books.data));\n    yield put(setAppLoading(false));\n  } catch (e) {\n    console.log(e);\n    yield put(setAppLoading(false));\n    yield put(setAlert({ type: \"error\", text: \"штото пошло не так\" }));\n  }\n}\n\nfunction* AddBookSaga({ book }: ReturnType<typeof AddBook>) {\n  yield put(setAppLoading(true));\n  try {\n    const books: AxiosResponse<BooksResponseType> = yield call(\n      setBookApi(book)\n    );\n    yield put(setBooksIntoState(books.data));\n    yield put(setAppLoading(false));\n    yield put(\n      setAlert({\n        type: \"success\",\n        text: \"все круто ищи свою книгу в конце хыыыы\",\n      })\n    );\n  } catch (e) {\n    yield put(setAppLoading(false));\n    yield put(\n      setAlert({\n        type: \"error\",\n        text: \"штото пошло не так, проверьте правильность данных\",\n      })\n    );\n  }\n}\n\nfunction* GetBookSaga({ id }: ReturnType<typeof fetchBook>) {\n  yield put(setAppLoading(true));\n  try {\n    const book: AxiosResponse<Book> = yield call(getBookApi(id));\n    console.log(book);\n    yield put(setBookIntoState(book.data));\n    yield put(setAppLoading(false));\n  } catch (e) {\n    console.log(e);\n    yield put(setAppLoading(false));\n    yield put(setAlert({ type: \"error\", text: \"нет такой книги\" }));\n  }\n}\n\nfunction* EditBookSaga({ bookForm, id }: ReturnType<typeof EditBook>) {\n  yield put(setAppLoading(true));\n  try {\n    const book: AxiosResponse<Book> = yield call(editBookApi(bookForm, id));\n    yield put(setBookIntoState(book.data));\n    yield put(setAppLoading(false));\n    yield put(\n      setAlert({\n        type: \"success\",\n        text: \"все круто\",\n      })\n    );\n  } catch (e) {\n    yield put(setAppLoading(false));\n    yield put(\n      setAlert({\n        type: \"error\",\n        text: \"штото пошло не так, проверьте правильность данных\",\n      })\n    );\n  }\n}\n\nfunction* DeleteBookSaga({ id, history }: ReturnType<typeof deleteBookAction>) {\n  yield put(setAppLoading(true));\n  try {\n    yield call(deleteBookApi(id));\n    yield put(setAlert({ type: \"success\", text: \"Все круто книга удаллиася\" }));\n    yield put(setAppLoading(false));\n    yield put(fetchBooks());\n    history.push(\"/books\");\n  } catch (e) {\n    console.log(e);\n    yield put(setAppLoading(false));\n    yield put(setAlert({ type: \"error\", text: \"нет такой книги\" }));\n  }\n}\n\nexport function* BooksWatcher() {\n  yield takeEvery(MutationTypes.EDIT_BOOK, EditBookSaga);\n  yield takeEvery(MutationTypes.DELETE_BOOK, DeleteBookSaga);\n  yield takeEvery(MutationTypes.ADD_BOOK, AddBookSaga);\n  yield takeEvery(MutationTypes.GET_BOOKS, GetBooksSaga);\n  yield takeEvery(MutationTypes.GET_BOOK, GetBookSaga);\n}\n","import { put, takeEvery, delay } from \"redux-saga/effects\";\nimport { removeAlert, removeAlertTimeout } from \"../actions/common\";\nimport { MutationTypes } from \"../../entity/mutation.types\";\n\nexport function* TimeoutSaga({\n  alertId,\n  timeout,\n}: ReturnType<typeof removeAlertTimeout>) {\n  if (alertId && timeout) {\n    yield delay(timeout);\n    yield put(removeAlert(alertId));\n  }\n}\nexport function* CommonWatcher() {\n  yield takeEvery(MutationTypes.REMOVE_ALERT_TIMEOUT, TimeoutSaga);\n}\n","import { all } from \"redux-saga/effects\";\nimport { AuthWatcher } from \"./auth\";\nimport { BooksWatcher } from \"./books\";\nimport { CommonWatcher } from \"./common\";\nexport default function* rootSaga() {\n  yield all([AuthWatcher(), BooksWatcher(), CommonWatcher()]);\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport configureStore from \"./store/configureStore\";\nimport { initialState } from \"./store/reducers\";\nimport { AuthProvider } from \"./context/AuthProvider\";\n\nexport const store = configureStore(initialState);\nexport type RootState = ReturnType<typeof store.getState>;\n\nexport type AppDispatch = typeof store.dispatch;\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <AuthProvider>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </AuthProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { applyMiddleware, createStore, Store, compose } from \"redux\";\nimport createReducers, { AppStore } from \"./reducers\";\nimport { CoolType } from \"./actions\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootSaga from \"./sideEffects\";\nexport default function configureStore(\n  initialState: AppStore\n): Store<AppStore, CoolType> {\n  const saga = createSagaMiddleware();\n  // @ts-ignore\n  const composeEnhancers =\n    // @ts-ignore\n    typeof window === \"object\" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n      ? // @ts-ignore\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\n      : compose;\n  const enchancers = composeEnhancers(applyMiddleware(saga));\n  const store = createStore<AppStore, CoolType, unknown, unknown>(\n    createReducers(),\n    initialState,\n    enchancers\n  );\n  saga.run(rootSaga);\n  return store;\n}\n"],"sourceRoot":""}